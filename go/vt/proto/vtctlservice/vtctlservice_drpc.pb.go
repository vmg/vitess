// Code generated by protoc-gen-go-drpc. DO NOT EDIT.
// protoc-gen-go-drpc version: v0.0.21
// source: vtctlservice.proto

package vtctlservice

import (
	context "context"
	errors "errors"
	protojson "google.golang.org/protobuf/encoding/protojson"
	proto "google.golang.org/protobuf/proto"
	drpc "storj.io/drpc"
	drpcerr "storj.io/drpc/drpcerr"
	vtctldata "vitess.io/vitess/go/vt/proto/vtctldata"
)

type drpcEncoding_File_vtctlservice_proto struct{}

func (drpcEncoding_File_vtctlservice_proto) Marshal(msg drpc.Message) ([]byte, error) {
	return proto.Marshal(msg.(proto.Message))
}

func (drpcEncoding_File_vtctlservice_proto) Unmarshal(buf []byte, msg drpc.Message) error {
	return proto.Unmarshal(buf, msg.(proto.Message))
}

func (drpcEncoding_File_vtctlservice_proto) JSONMarshal(msg drpc.Message) ([]byte, error) {
	return protojson.Marshal(msg.(proto.Message))
}

func (drpcEncoding_File_vtctlservice_proto) JSONUnmarshal(buf []byte, msg drpc.Message) error {
	return protojson.Unmarshal(buf, msg.(proto.Message))
}

type DRPCVtctlClient interface {
	DRPCConn() drpc.Conn

	ExecuteVtctlCommand(ctx context.Context, in *vtctldata.ExecuteVtctlCommandRequest) (DRPCVtctl_ExecuteVtctlCommandClient, error)
}

type drpcVtctlClient struct {
	cc drpc.Conn
}

func NewDRPCVtctlClient(cc drpc.Conn) DRPCVtctlClient {
	return &drpcVtctlClient{cc}
}

func (c *drpcVtctlClient) DRPCConn() drpc.Conn { return c.cc }

func (c *drpcVtctlClient) ExecuteVtctlCommand(ctx context.Context, in *vtctldata.ExecuteVtctlCommandRequest) (DRPCVtctl_ExecuteVtctlCommandClient, error) {
	stream, err := c.cc.NewStream(ctx, "/vtctlservice.Vtctl/ExecuteVtctlCommand", drpcEncoding_File_vtctlservice_proto{})
	if err != nil {
		return nil, err
	}
	x := &drpcVtctl_ExecuteVtctlCommandClient{stream}
	if err := x.MsgSend(in, drpcEncoding_File_vtctlservice_proto{}); err != nil {
		return nil, err
	}
	if err := x.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DRPCVtctl_ExecuteVtctlCommandClient interface {
	drpc.Stream
	Recv() (*vtctldata.ExecuteVtctlCommandResponse, error)
}

type drpcVtctl_ExecuteVtctlCommandClient struct {
	drpc.Stream
}

func (x *drpcVtctl_ExecuteVtctlCommandClient) Recv() (*vtctldata.ExecuteVtctlCommandResponse, error) {
	m := new(vtctldata.ExecuteVtctlCommandResponse)
	if err := x.MsgRecv(m, drpcEncoding_File_vtctlservice_proto{}); err != nil {
		return nil, err
	}
	return m, nil
}

type DRPCVtctlServer interface {
	ExecuteVtctlCommand(*vtctldata.ExecuteVtctlCommandRequest, DRPCVtctl_ExecuteVtctlCommandStream) error
}

type DRPCVtctlUnimplementedServer struct{}

func (s *DRPCVtctlUnimplementedServer) ExecuteVtctlCommand(*vtctldata.ExecuteVtctlCommandRequest, DRPCVtctl_ExecuteVtctlCommandStream) error {
	return drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

type DRPCVtctlDescription struct{}

func (DRPCVtctlDescription) NumMethods() int { return 1 }

func (DRPCVtctlDescription) Method(n int) (string, drpc.Encoding, drpc.Receiver, interface{}, bool) {
	switch n {
	case 0:
		return "/vtctlservice.Vtctl/ExecuteVtctlCommand", drpcEncoding_File_vtctlservice_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return nil, srv.(DRPCVtctlServer).
					ExecuteVtctlCommand(
						in1.(*vtctldata.ExecuteVtctlCommandRequest),
						&drpcVtctl_ExecuteVtctlCommandStream{in2.(drpc.Stream)},
					)
			}, DRPCVtctlServer.ExecuteVtctlCommand, true
	default:
		return "", nil, nil, nil, false
	}
}

func DRPCRegisterVtctl(mux drpc.Mux, impl DRPCVtctlServer) error {
	return mux.Register(impl, DRPCVtctlDescription{})
}

type DRPCVtctl_ExecuteVtctlCommandStream interface {
	drpc.Stream
	Send(*vtctldata.ExecuteVtctlCommandResponse) error
}

type drpcVtctl_ExecuteVtctlCommandStream struct {
	drpc.Stream
}

func (x *drpcVtctl_ExecuteVtctlCommandStream) Send(m *vtctldata.ExecuteVtctlCommandResponse) error {
	return x.MsgSend(m, drpcEncoding_File_vtctlservice_proto{})
}

type DRPCVtctldClient interface {
	DRPCConn() drpc.Conn

	ChangeTabletType(ctx context.Context, in *vtctldata.ChangeTabletTypeRequest) (*vtctldata.ChangeTabletTypeResponse, error)
	CreateKeyspace(ctx context.Context, in *vtctldata.CreateKeyspaceRequest) (*vtctldata.CreateKeyspaceResponse, error)
	CreateShard(ctx context.Context, in *vtctldata.CreateShardRequest) (*vtctldata.CreateShardResponse, error)
	DeleteKeyspace(ctx context.Context, in *vtctldata.DeleteKeyspaceRequest) (*vtctldata.DeleteKeyspaceResponse, error)
	DeleteShards(ctx context.Context, in *vtctldata.DeleteShardsRequest) (*vtctldata.DeleteShardsResponse, error)
	DeleteTablets(ctx context.Context, in *vtctldata.DeleteTabletsRequest) (*vtctldata.DeleteTabletsResponse, error)
	EmergencyReparentShard(ctx context.Context, in *vtctldata.EmergencyReparentShardRequest) (*vtctldata.EmergencyReparentShardResponse, error)
	FindAllShardsInKeyspace(ctx context.Context, in *vtctldata.FindAllShardsInKeyspaceRequest) (*vtctldata.FindAllShardsInKeyspaceResponse, error)
	GetBackups(ctx context.Context, in *vtctldata.GetBackupsRequest) (*vtctldata.GetBackupsResponse, error)
	GetCellInfoNames(ctx context.Context, in *vtctldata.GetCellInfoNamesRequest) (*vtctldata.GetCellInfoNamesResponse, error)
	GetCellInfo(ctx context.Context, in *vtctldata.GetCellInfoRequest) (*vtctldata.GetCellInfoResponse, error)
	GetCellsAliases(ctx context.Context, in *vtctldata.GetCellsAliasesRequest) (*vtctldata.GetCellsAliasesResponse, error)
	GetKeyspace(ctx context.Context, in *vtctldata.GetKeyspaceRequest) (*vtctldata.GetKeyspaceResponse, error)
	GetKeyspaces(ctx context.Context, in *vtctldata.GetKeyspacesRequest) (*vtctldata.GetKeyspacesResponse, error)
	GetSchema(ctx context.Context, in *vtctldata.GetSchemaRequest) (*vtctldata.GetSchemaResponse, error)
	GetShard(ctx context.Context, in *vtctldata.GetShardRequest) (*vtctldata.GetShardResponse, error)
	GetSrvKeyspaces(ctx context.Context, in *vtctldata.GetSrvKeyspacesRequest) (*vtctldata.GetSrvKeyspacesResponse, error)
	GetSrvVSchema(ctx context.Context, in *vtctldata.GetSrvVSchemaRequest) (*vtctldata.GetSrvVSchemaResponse, error)
	GetTablet(ctx context.Context, in *vtctldata.GetTabletRequest) (*vtctldata.GetTabletResponse, error)
	GetTablets(ctx context.Context, in *vtctldata.GetTabletsRequest) (*vtctldata.GetTabletsResponse, error)
	GetVSchema(ctx context.Context, in *vtctldata.GetVSchemaRequest) (*vtctldata.GetVSchemaResponse, error)
	GetWorkflows(ctx context.Context, in *vtctldata.GetWorkflowsRequest) (*vtctldata.GetWorkflowsResponse, error)
	InitShardPrimary(ctx context.Context, in *vtctldata.InitShardPrimaryRequest) (*vtctldata.InitShardPrimaryResponse, error)
	PlannedReparentShard(ctx context.Context, in *vtctldata.PlannedReparentShardRequest) (*vtctldata.PlannedReparentShardResponse, error)
	RemoveKeyspaceCell(ctx context.Context, in *vtctldata.RemoveKeyspaceCellRequest) (*vtctldata.RemoveKeyspaceCellResponse, error)
	RemoveShardCell(ctx context.Context, in *vtctldata.RemoveShardCellRequest) (*vtctldata.RemoveShardCellResponse, error)
	ReparentTablet(ctx context.Context, in *vtctldata.ReparentTabletRequest) (*vtctldata.ReparentTabletResponse, error)
	ShardReplicationPositions(ctx context.Context, in *vtctldata.ShardReplicationPositionsRequest) (*vtctldata.ShardReplicationPositionsResponse, error)
	TabletExternallyReparented(ctx context.Context, in *vtctldata.TabletExternallyReparentedRequest) (*vtctldata.TabletExternallyReparentedResponse, error)
}

type drpcVtctldClient struct {
	cc drpc.Conn
}

func NewDRPCVtctldClient(cc drpc.Conn) DRPCVtctldClient {
	return &drpcVtctldClient{cc}
}

func (c *drpcVtctldClient) DRPCConn() drpc.Conn { return c.cc }

func (c *drpcVtctldClient) ChangeTabletType(ctx context.Context, in *vtctldata.ChangeTabletTypeRequest) (*vtctldata.ChangeTabletTypeResponse, error) {
	out := new(vtctldata.ChangeTabletTypeResponse)
	err := c.cc.Invoke(ctx, "/vtctlservice.Vtctld/ChangeTabletType", drpcEncoding_File_vtctlservice_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVtctldClient) CreateKeyspace(ctx context.Context, in *vtctldata.CreateKeyspaceRequest) (*vtctldata.CreateKeyspaceResponse, error) {
	out := new(vtctldata.CreateKeyspaceResponse)
	err := c.cc.Invoke(ctx, "/vtctlservice.Vtctld/CreateKeyspace", drpcEncoding_File_vtctlservice_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVtctldClient) CreateShard(ctx context.Context, in *vtctldata.CreateShardRequest) (*vtctldata.CreateShardResponse, error) {
	out := new(vtctldata.CreateShardResponse)
	err := c.cc.Invoke(ctx, "/vtctlservice.Vtctld/CreateShard", drpcEncoding_File_vtctlservice_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVtctldClient) DeleteKeyspace(ctx context.Context, in *vtctldata.DeleteKeyspaceRequest) (*vtctldata.DeleteKeyspaceResponse, error) {
	out := new(vtctldata.DeleteKeyspaceResponse)
	err := c.cc.Invoke(ctx, "/vtctlservice.Vtctld/DeleteKeyspace", drpcEncoding_File_vtctlservice_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVtctldClient) DeleteShards(ctx context.Context, in *vtctldata.DeleteShardsRequest) (*vtctldata.DeleteShardsResponse, error) {
	out := new(vtctldata.DeleteShardsResponse)
	err := c.cc.Invoke(ctx, "/vtctlservice.Vtctld/DeleteShards", drpcEncoding_File_vtctlservice_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVtctldClient) DeleteTablets(ctx context.Context, in *vtctldata.DeleteTabletsRequest) (*vtctldata.DeleteTabletsResponse, error) {
	out := new(vtctldata.DeleteTabletsResponse)
	err := c.cc.Invoke(ctx, "/vtctlservice.Vtctld/DeleteTablets", drpcEncoding_File_vtctlservice_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVtctldClient) EmergencyReparentShard(ctx context.Context, in *vtctldata.EmergencyReparentShardRequest) (*vtctldata.EmergencyReparentShardResponse, error) {
	out := new(vtctldata.EmergencyReparentShardResponse)
	err := c.cc.Invoke(ctx, "/vtctlservice.Vtctld/EmergencyReparentShard", drpcEncoding_File_vtctlservice_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVtctldClient) FindAllShardsInKeyspace(ctx context.Context, in *vtctldata.FindAllShardsInKeyspaceRequest) (*vtctldata.FindAllShardsInKeyspaceResponse, error) {
	out := new(vtctldata.FindAllShardsInKeyspaceResponse)
	err := c.cc.Invoke(ctx, "/vtctlservice.Vtctld/FindAllShardsInKeyspace", drpcEncoding_File_vtctlservice_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVtctldClient) GetBackups(ctx context.Context, in *vtctldata.GetBackupsRequest) (*vtctldata.GetBackupsResponse, error) {
	out := new(vtctldata.GetBackupsResponse)
	err := c.cc.Invoke(ctx, "/vtctlservice.Vtctld/GetBackups", drpcEncoding_File_vtctlservice_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVtctldClient) GetCellInfoNames(ctx context.Context, in *vtctldata.GetCellInfoNamesRequest) (*vtctldata.GetCellInfoNamesResponse, error) {
	out := new(vtctldata.GetCellInfoNamesResponse)
	err := c.cc.Invoke(ctx, "/vtctlservice.Vtctld/GetCellInfoNames", drpcEncoding_File_vtctlservice_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVtctldClient) GetCellInfo(ctx context.Context, in *vtctldata.GetCellInfoRequest) (*vtctldata.GetCellInfoResponse, error) {
	out := new(vtctldata.GetCellInfoResponse)
	err := c.cc.Invoke(ctx, "/vtctlservice.Vtctld/GetCellInfo", drpcEncoding_File_vtctlservice_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVtctldClient) GetCellsAliases(ctx context.Context, in *vtctldata.GetCellsAliasesRequest) (*vtctldata.GetCellsAliasesResponse, error) {
	out := new(vtctldata.GetCellsAliasesResponse)
	err := c.cc.Invoke(ctx, "/vtctlservice.Vtctld/GetCellsAliases", drpcEncoding_File_vtctlservice_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVtctldClient) GetKeyspace(ctx context.Context, in *vtctldata.GetKeyspaceRequest) (*vtctldata.GetKeyspaceResponse, error) {
	out := new(vtctldata.GetKeyspaceResponse)
	err := c.cc.Invoke(ctx, "/vtctlservice.Vtctld/GetKeyspace", drpcEncoding_File_vtctlservice_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVtctldClient) GetKeyspaces(ctx context.Context, in *vtctldata.GetKeyspacesRequest) (*vtctldata.GetKeyspacesResponse, error) {
	out := new(vtctldata.GetKeyspacesResponse)
	err := c.cc.Invoke(ctx, "/vtctlservice.Vtctld/GetKeyspaces", drpcEncoding_File_vtctlservice_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVtctldClient) GetSchema(ctx context.Context, in *vtctldata.GetSchemaRequest) (*vtctldata.GetSchemaResponse, error) {
	out := new(vtctldata.GetSchemaResponse)
	err := c.cc.Invoke(ctx, "/vtctlservice.Vtctld/GetSchema", drpcEncoding_File_vtctlservice_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVtctldClient) GetShard(ctx context.Context, in *vtctldata.GetShardRequest) (*vtctldata.GetShardResponse, error) {
	out := new(vtctldata.GetShardResponse)
	err := c.cc.Invoke(ctx, "/vtctlservice.Vtctld/GetShard", drpcEncoding_File_vtctlservice_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVtctldClient) GetSrvKeyspaces(ctx context.Context, in *vtctldata.GetSrvKeyspacesRequest) (*vtctldata.GetSrvKeyspacesResponse, error) {
	out := new(vtctldata.GetSrvKeyspacesResponse)
	err := c.cc.Invoke(ctx, "/vtctlservice.Vtctld/GetSrvKeyspaces", drpcEncoding_File_vtctlservice_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVtctldClient) GetSrvVSchema(ctx context.Context, in *vtctldata.GetSrvVSchemaRequest) (*vtctldata.GetSrvVSchemaResponse, error) {
	out := new(vtctldata.GetSrvVSchemaResponse)
	err := c.cc.Invoke(ctx, "/vtctlservice.Vtctld/GetSrvVSchema", drpcEncoding_File_vtctlservice_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVtctldClient) GetTablet(ctx context.Context, in *vtctldata.GetTabletRequest) (*vtctldata.GetTabletResponse, error) {
	out := new(vtctldata.GetTabletResponse)
	err := c.cc.Invoke(ctx, "/vtctlservice.Vtctld/GetTablet", drpcEncoding_File_vtctlservice_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVtctldClient) GetTablets(ctx context.Context, in *vtctldata.GetTabletsRequest) (*vtctldata.GetTabletsResponse, error) {
	out := new(vtctldata.GetTabletsResponse)
	err := c.cc.Invoke(ctx, "/vtctlservice.Vtctld/GetTablets", drpcEncoding_File_vtctlservice_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVtctldClient) GetVSchema(ctx context.Context, in *vtctldata.GetVSchemaRequest) (*vtctldata.GetVSchemaResponse, error) {
	out := new(vtctldata.GetVSchemaResponse)
	err := c.cc.Invoke(ctx, "/vtctlservice.Vtctld/GetVSchema", drpcEncoding_File_vtctlservice_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVtctldClient) GetWorkflows(ctx context.Context, in *vtctldata.GetWorkflowsRequest) (*vtctldata.GetWorkflowsResponse, error) {
	out := new(vtctldata.GetWorkflowsResponse)
	err := c.cc.Invoke(ctx, "/vtctlservice.Vtctld/GetWorkflows", drpcEncoding_File_vtctlservice_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVtctldClient) InitShardPrimary(ctx context.Context, in *vtctldata.InitShardPrimaryRequest) (*vtctldata.InitShardPrimaryResponse, error) {
	out := new(vtctldata.InitShardPrimaryResponse)
	err := c.cc.Invoke(ctx, "/vtctlservice.Vtctld/InitShardPrimary", drpcEncoding_File_vtctlservice_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVtctldClient) PlannedReparentShard(ctx context.Context, in *vtctldata.PlannedReparentShardRequest) (*vtctldata.PlannedReparentShardResponse, error) {
	out := new(vtctldata.PlannedReparentShardResponse)
	err := c.cc.Invoke(ctx, "/vtctlservice.Vtctld/PlannedReparentShard", drpcEncoding_File_vtctlservice_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVtctldClient) RemoveKeyspaceCell(ctx context.Context, in *vtctldata.RemoveKeyspaceCellRequest) (*vtctldata.RemoveKeyspaceCellResponse, error) {
	out := new(vtctldata.RemoveKeyspaceCellResponse)
	err := c.cc.Invoke(ctx, "/vtctlservice.Vtctld/RemoveKeyspaceCell", drpcEncoding_File_vtctlservice_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVtctldClient) RemoveShardCell(ctx context.Context, in *vtctldata.RemoveShardCellRequest) (*vtctldata.RemoveShardCellResponse, error) {
	out := new(vtctldata.RemoveShardCellResponse)
	err := c.cc.Invoke(ctx, "/vtctlservice.Vtctld/RemoveShardCell", drpcEncoding_File_vtctlservice_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVtctldClient) ReparentTablet(ctx context.Context, in *vtctldata.ReparentTabletRequest) (*vtctldata.ReparentTabletResponse, error) {
	out := new(vtctldata.ReparentTabletResponse)
	err := c.cc.Invoke(ctx, "/vtctlservice.Vtctld/ReparentTablet", drpcEncoding_File_vtctlservice_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVtctldClient) ShardReplicationPositions(ctx context.Context, in *vtctldata.ShardReplicationPositionsRequest) (*vtctldata.ShardReplicationPositionsResponse, error) {
	out := new(vtctldata.ShardReplicationPositionsResponse)
	err := c.cc.Invoke(ctx, "/vtctlservice.Vtctld/ShardReplicationPositions", drpcEncoding_File_vtctlservice_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcVtctldClient) TabletExternallyReparented(ctx context.Context, in *vtctldata.TabletExternallyReparentedRequest) (*vtctldata.TabletExternallyReparentedResponse, error) {
	out := new(vtctldata.TabletExternallyReparentedResponse)
	err := c.cc.Invoke(ctx, "/vtctlservice.Vtctld/TabletExternallyReparented", drpcEncoding_File_vtctlservice_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type DRPCVtctldServer interface {
	ChangeTabletType(context.Context, *vtctldata.ChangeTabletTypeRequest) (*vtctldata.ChangeTabletTypeResponse, error)
	CreateKeyspace(context.Context, *vtctldata.CreateKeyspaceRequest) (*vtctldata.CreateKeyspaceResponse, error)
	CreateShard(context.Context, *vtctldata.CreateShardRequest) (*vtctldata.CreateShardResponse, error)
	DeleteKeyspace(context.Context, *vtctldata.DeleteKeyspaceRequest) (*vtctldata.DeleteKeyspaceResponse, error)
	DeleteShards(context.Context, *vtctldata.DeleteShardsRequest) (*vtctldata.DeleteShardsResponse, error)
	DeleteTablets(context.Context, *vtctldata.DeleteTabletsRequest) (*vtctldata.DeleteTabletsResponse, error)
	EmergencyReparentShard(context.Context, *vtctldata.EmergencyReparentShardRequest) (*vtctldata.EmergencyReparentShardResponse, error)
	FindAllShardsInKeyspace(context.Context, *vtctldata.FindAllShardsInKeyspaceRequest) (*vtctldata.FindAllShardsInKeyspaceResponse, error)
	GetBackups(context.Context, *vtctldata.GetBackupsRequest) (*vtctldata.GetBackupsResponse, error)
	GetCellInfoNames(context.Context, *vtctldata.GetCellInfoNamesRequest) (*vtctldata.GetCellInfoNamesResponse, error)
	GetCellInfo(context.Context, *vtctldata.GetCellInfoRequest) (*vtctldata.GetCellInfoResponse, error)
	GetCellsAliases(context.Context, *vtctldata.GetCellsAliasesRequest) (*vtctldata.GetCellsAliasesResponse, error)
	GetKeyspace(context.Context, *vtctldata.GetKeyspaceRequest) (*vtctldata.GetKeyspaceResponse, error)
	GetKeyspaces(context.Context, *vtctldata.GetKeyspacesRequest) (*vtctldata.GetKeyspacesResponse, error)
	GetSchema(context.Context, *vtctldata.GetSchemaRequest) (*vtctldata.GetSchemaResponse, error)
	GetShard(context.Context, *vtctldata.GetShardRequest) (*vtctldata.GetShardResponse, error)
	GetSrvKeyspaces(context.Context, *vtctldata.GetSrvKeyspacesRequest) (*vtctldata.GetSrvKeyspacesResponse, error)
	GetSrvVSchema(context.Context, *vtctldata.GetSrvVSchemaRequest) (*vtctldata.GetSrvVSchemaResponse, error)
	GetTablet(context.Context, *vtctldata.GetTabletRequest) (*vtctldata.GetTabletResponse, error)
	GetTablets(context.Context, *vtctldata.GetTabletsRequest) (*vtctldata.GetTabletsResponse, error)
	GetVSchema(context.Context, *vtctldata.GetVSchemaRequest) (*vtctldata.GetVSchemaResponse, error)
	GetWorkflows(context.Context, *vtctldata.GetWorkflowsRequest) (*vtctldata.GetWorkflowsResponse, error)
	InitShardPrimary(context.Context, *vtctldata.InitShardPrimaryRequest) (*vtctldata.InitShardPrimaryResponse, error)
	PlannedReparentShard(context.Context, *vtctldata.PlannedReparentShardRequest) (*vtctldata.PlannedReparentShardResponse, error)
	RemoveKeyspaceCell(context.Context, *vtctldata.RemoveKeyspaceCellRequest) (*vtctldata.RemoveKeyspaceCellResponse, error)
	RemoveShardCell(context.Context, *vtctldata.RemoveShardCellRequest) (*vtctldata.RemoveShardCellResponse, error)
	ReparentTablet(context.Context, *vtctldata.ReparentTabletRequest) (*vtctldata.ReparentTabletResponse, error)
	ShardReplicationPositions(context.Context, *vtctldata.ShardReplicationPositionsRequest) (*vtctldata.ShardReplicationPositionsResponse, error)
	TabletExternallyReparented(context.Context, *vtctldata.TabletExternallyReparentedRequest) (*vtctldata.TabletExternallyReparentedResponse, error)
}

type DRPCVtctldUnimplementedServer struct{}

func (s *DRPCVtctldUnimplementedServer) ChangeTabletType(context.Context, *vtctldata.ChangeTabletTypeRequest) (*vtctldata.ChangeTabletTypeResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVtctldUnimplementedServer) CreateKeyspace(context.Context, *vtctldata.CreateKeyspaceRequest) (*vtctldata.CreateKeyspaceResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVtctldUnimplementedServer) CreateShard(context.Context, *vtctldata.CreateShardRequest) (*vtctldata.CreateShardResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVtctldUnimplementedServer) DeleteKeyspace(context.Context, *vtctldata.DeleteKeyspaceRequest) (*vtctldata.DeleteKeyspaceResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVtctldUnimplementedServer) DeleteShards(context.Context, *vtctldata.DeleteShardsRequest) (*vtctldata.DeleteShardsResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVtctldUnimplementedServer) DeleteTablets(context.Context, *vtctldata.DeleteTabletsRequest) (*vtctldata.DeleteTabletsResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVtctldUnimplementedServer) EmergencyReparentShard(context.Context, *vtctldata.EmergencyReparentShardRequest) (*vtctldata.EmergencyReparentShardResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVtctldUnimplementedServer) FindAllShardsInKeyspace(context.Context, *vtctldata.FindAllShardsInKeyspaceRequest) (*vtctldata.FindAllShardsInKeyspaceResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVtctldUnimplementedServer) GetBackups(context.Context, *vtctldata.GetBackupsRequest) (*vtctldata.GetBackupsResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVtctldUnimplementedServer) GetCellInfoNames(context.Context, *vtctldata.GetCellInfoNamesRequest) (*vtctldata.GetCellInfoNamesResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVtctldUnimplementedServer) GetCellInfo(context.Context, *vtctldata.GetCellInfoRequest) (*vtctldata.GetCellInfoResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVtctldUnimplementedServer) GetCellsAliases(context.Context, *vtctldata.GetCellsAliasesRequest) (*vtctldata.GetCellsAliasesResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVtctldUnimplementedServer) GetKeyspace(context.Context, *vtctldata.GetKeyspaceRequest) (*vtctldata.GetKeyspaceResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVtctldUnimplementedServer) GetKeyspaces(context.Context, *vtctldata.GetKeyspacesRequest) (*vtctldata.GetKeyspacesResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVtctldUnimplementedServer) GetSchema(context.Context, *vtctldata.GetSchemaRequest) (*vtctldata.GetSchemaResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVtctldUnimplementedServer) GetShard(context.Context, *vtctldata.GetShardRequest) (*vtctldata.GetShardResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVtctldUnimplementedServer) GetSrvKeyspaces(context.Context, *vtctldata.GetSrvKeyspacesRequest) (*vtctldata.GetSrvKeyspacesResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVtctldUnimplementedServer) GetSrvVSchema(context.Context, *vtctldata.GetSrvVSchemaRequest) (*vtctldata.GetSrvVSchemaResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVtctldUnimplementedServer) GetTablet(context.Context, *vtctldata.GetTabletRequest) (*vtctldata.GetTabletResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVtctldUnimplementedServer) GetTablets(context.Context, *vtctldata.GetTabletsRequest) (*vtctldata.GetTabletsResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVtctldUnimplementedServer) GetVSchema(context.Context, *vtctldata.GetVSchemaRequest) (*vtctldata.GetVSchemaResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVtctldUnimplementedServer) GetWorkflows(context.Context, *vtctldata.GetWorkflowsRequest) (*vtctldata.GetWorkflowsResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVtctldUnimplementedServer) InitShardPrimary(context.Context, *vtctldata.InitShardPrimaryRequest) (*vtctldata.InitShardPrimaryResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVtctldUnimplementedServer) PlannedReparentShard(context.Context, *vtctldata.PlannedReparentShardRequest) (*vtctldata.PlannedReparentShardResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVtctldUnimplementedServer) RemoveKeyspaceCell(context.Context, *vtctldata.RemoveKeyspaceCellRequest) (*vtctldata.RemoveKeyspaceCellResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVtctldUnimplementedServer) RemoveShardCell(context.Context, *vtctldata.RemoveShardCellRequest) (*vtctldata.RemoveShardCellResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVtctldUnimplementedServer) ReparentTablet(context.Context, *vtctldata.ReparentTabletRequest) (*vtctldata.ReparentTabletResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVtctldUnimplementedServer) ShardReplicationPositions(context.Context, *vtctldata.ShardReplicationPositionsRequest) (*vtctldata.ShardReplicationPositionsResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

func (s *DRPCVtctldUnimplementedServer) TabletExternallyReparented(context.Context, *vtctldata.TabletExternallyReparentedRequest) (*vtctldata.TabletExternallyReparentedResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), 12)
}

type DRPCVtctldDescription struct{}

func (DRPCVtctldDescription) NumMethods() int { return 29 }

func (DRPCVtctldDescription) Method(n int) (string, drpc.Encoding, drpc.Receiver, interface{}, bool) {
	switch n {
	case 0:
		return "/vtctlservice.Vtctld/ChangeTabletType", drpcEncoding_File_vtctlservice_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVtctldServer).
					ChangeTabletType(
						ctx,
						in1.(*vtctldata.ChangeTabletTypeRequest),
					)
			}, DRPCVtctldServer.ChangeTabletType, true
	case 1:
		return "/vtctlservice.Vtctld/CreateKeyspace", drpcEncoding_File_vtctlservice_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVtctldServer).
					CreateKeyspace(
						ctx,
						in1.(*vtctldata.CreateKeyspaceRequest),
					)
			}, DRPCVtctldServer.CreateKeyspace, true
	case 2:
		return "/vtctlservice.Vtctld/CreateShard", drpcEncoding_File_vtctlservice_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVtctldServer).
					CreateShard(
						ctx,
						in1.(*vtctldata.CreateShardRequest),
					)
			}, DRPCVtctldServer.CreateShard, true
	case 3:
		return "/vtctlservice.Vtctld/DeleteKeyspace", drpcEncoding_File_vtctlservice_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVtctldServer).
					DeleteKeyspace(
						ctx,
						in1.(*vtctldata.DeleteKeyspaceRequest),
					)
			}, DRPCVtctldServer.DeleteKeyspace, true
	case 4:
		return "/vtctlservice.Vtctld/DeleteShards", drpcEncoding_File_vtctlservice_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVtctldServer).
					DeleteShards(
						ctx,
						in1.(*vtctldata.DeleteShardsRequest),
					)
			}, DRPCVtctldServer.DeleteShards, true
	case 5:
		return "/vtctlservice.Vtctld/DeleteTablets", drpcEncoding_File_vtctlservice_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVtctldServer).
					DeleteTablets(
						ctx,
						in1.(*vtctldata.DeleteTabletsRequest),
					)
			}, DRPCVtctldServer.DeleteTablets, true
	case 6:
		return "/vtctlservice.Vtctld/EmergencyReparentShard", drpcEncoding_File_vtctlservice_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVtctldServer).
					EmergencyReparentShard(
						ctx,
						in1.(*vtctldata.EmergencyReparentShardRequest),
					)
			}, DRPCVtctldServer.EmergencyReparentShard, true
	case 7:
		return "/vtctlservice.Vtctld/FindAllShardsInKeyspace", drpcEncoding_File_vtctlservice_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVtctldServer).
					FindAllShardsInKeyspace(
						ctx,
						in1.(*vtctldata.FindAllShardsInKeyspaceRequest),
					)
			}, DRPCVtctldServer.FindAllShardsInKeyspace, true
	case 8:
		return "/vtctlservice.Vtctld/GetBackups", drpcEncoding_File_vtctlservice_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVtctldServer).
					GetBackups(
						ctx,
						in1.(*vtctldata.GetBackupsRequest),
					)
			}, DRPCVtctldServer.GetBackups, true
	case 9:
		return "/vtctlservice.Vtctld/GetCellInfoNames", drpcEncoding_File_vtctlservice_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVtctldServer).
					GetCellInfoNames(
						ctx,
						in1.(*vtctldata.GetCellInfoNamesRequest),
					)
			}, DRPCVtctldServer.GetCellInfoNames, true
	case 10:
		return "/vtctlservice.Vtctld/GetCellInfo", drpcEncoding_File_vtctlservice_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVtctldServer).
					GetCellInfo(
						ctx,
						in1.(*vtctldata.GetCellInfoRequest),
					)
			}, DRPCVtctldServer.GetCellInfo, true
	case 11:
		return "/vtctlservice.Vtctld/GetCellsAliases", drpcEncoding_File_vtctlservice_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVtctldServer).
					GetCellsAliases(
						ctx,
						in1.(*vtctldata.GetCellsAliasesRequest),
					)
			}, DRPCVtctldServer.GetCellsAliases, true
	case 12:
		return "/vtctlservice.Vtctld/GetKeyspace", drpcEncoding_File_vtctlservice_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVtctldServer).
					GetKeyspace(
						ctx,
						in1.(*vtctldata.GetKeyspaceRequest),
					)
			}, DRPCVtctldServer.GetKeyspace, true
	case 13:
		return "/vtctlservice.Vtctld/GetKeyspaces", drpcEncoding_File_vtctlservice_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVtctldServer).
					GetKeyspaces(
						ctx,
						in1.(*vtctldata.GetKeyspacesRequest),
					)
			}, DRPCVtctldServer.GetKeyspaces, true
	case 14:
		return "/vtctlservice.Vtctld/GetSchema", drpcEncoding_File_vtctlservice_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVtctldServer).
					GetSchema(
						ctx,
						in1.(*vtctldata.GetSchemaRequest),
					)
			}, DRPCVtctldServer.GetSchema, true
	case 15:
		return "/vtctlservice.Vtctld/GetShard", drpcEncoding_File_vtctlservice_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVtctldServer).
					GetShard(
						ctx,
						in1.(*vtctldata.GetShardRequest),
					)
			}, DRPCVtctldServer.GetShard, true
	case 16:
		return "/vtctlservice.Vtctld/GetSrvKeyspaces", drpcEncoding_File_vtctlservice_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVtctldServer).
					GetSrvKeyspaces(
						ctx,
						in1.(*vtctldata.GetSrvKeyspacesRequest),
					)
			}, DRPCVtctldServer.GetSrvKeyspaces, true
	case 17:
		return "/vtctlservice.Vtctld/GetSrvVSchema", drpcEncoding_File_vtctlservice_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVtctldServer).
					GetSrvVSchema(
						ctx,
						in1.(*vtctldata.GetSrvVSchemaRequest),
					)
			}, DRPCVtctldServer.GetSrvVSchema, true
	case 18:
		return "/vtctlservice.Vtctld/GetTablet", drpcEncoding_File_vtctlservice_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVtctldServer).
					GetTablet(
						ctx,
						in1.(*vtctldata.GetTabletRequest),
					)
			}, DRPCVtctldServer.GetTablet, true
	case 19:
		return "/vtctlservice.Vtctld/GetTablets", drpcEncoding_File_vtctlservice_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVtctldServer).
					GetTablets(
						ctx,
						in1.(*vtctldata.GetTabletsRequest),
					)
			}, DRPCVtctldServer.GetTablets, true
	case 20:
		return "/vtctlservice.Vtctld/GetVSchema", drpcEncoding_File_vtctlservice_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVtctldServer).
					GetVSchema(
						ctx,
						in1.(*vtctldata.GetVSchemaRequest),
					)
			}, DRPCVtctldServer.GetVSchema, true
	case 21:
		return "/vtctlservice.Vtctld/GetWorkflows", drpcEncoding_File_vtctlservice_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVtctldServer).
					GetWorkflows(
						ctx,
						in1.(*vtctldata.GetWorkflowsRequest),
					)
			}, DRPCVtctldServer.GetWorkflows, true
	case 22:
		return "/vtctlservice.Vtctld/InitShardPrimary", drpcEncoding_File_vtctlservice_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVtctldServer).
					InitShardPrimary(
						ctx,
						in1.(*vtctldata.InitShardPrimaryRequest),
					)
			}, DRPCVtctldServer.InitShardPrimary, true
	case 23:
		return "/vtctlservice.Vtctld/PlannedReparentShard", drpcEncoding_File_vtctlservice_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVtctldServer).
					PlannedReparentShard(
						ctx,
						in1.(*vtctldata.PlannedReparentShardRequest),
					)
			}, DRPCVtctldServer.PlannedReparentShard, true
	case 24:
		return "/vtctlservice.Vtctld/RemoveKeyspaceCell", drpcEncoding_File_vtctlservice_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVtctldServer).
					RemoveKeyspaceCell(
						ctx,
						in1.(*vtctldata.RemoveKeyspaceCellRequest),
					)
			}, DRPCVtctldServer.RemoveKeyspaceCell, true
	case 25:
		return "/vtctlservice.Vtctld/RemoveShardCell", drpcEncoding_File_vtctlservice_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVtctldServer).
					RemoveShardCell(
						ctx,
						in1.(*vtctldata.RemoveShardCellRequest),
					)
			}, DRPCVtctldServer.RemoveShardCell, true
	case 26:
		return "/vtctlservice.Vtctld/ReparentTablet", drpcEncoding_File_vtctlservice_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVtctldServer).
					ReparentTablet(
						ctx,
						in1.(*vtctldata.ReparentTabletRequest),
					)
			}, DRPCVtctldServer.ReparentTablet, true
	case 27:
		return "/vtctlservice.Vtctld/ShardReplicationPositions", drpcEncoding_File_vtctlservice_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVtctldServer).
					ShardReplicationPositions(
						ctx,
						in1.(*vtctldata.ShardReplicationPositionsRequest),
					)
			}, DRPCVtctldServer.ShardReplicationPositions, true
	case 28:
		return "/vtctlservice.Vtctld/TabletExternallyReparented", drpcEncoding_File_vtctlservice_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCVtctldServer).
					TabletExternallyReparented(
						ctx,
						in1.(*vtctldata.TabletExternallyReparentedRequest),
					)
			}, DRPCVtctldServer.TabletExternallyReparented, true
	default:
		return "", nil, nil, nil, false
	}
}

func DRPCRegisterVtctld(mux drpc.Mux, impl DRPCVtctldServer) error {
	return mux.Register(impl, DRPCVtctldDescription{})
}

type DRPCVtctld_ChangeTabletTypeStream interface {
	drpc.Stream
	SendAndClose(*vtctldata.ChangeTabletTypeResponse) error
}

type drpcVtctld_ChangeTabletTypeStream struct {
	drpc.Stream
}

func (x *drpcVtctld_ChangeTabletTypeStream) SendAndClose(m *vtctldata.ChangeTabletTypeResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtctlservice_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVtctld_CreateKeyspaceStream interface {
	drpc.Stream
	SendAndClose(*vtctldata.CreateKeyspaceResponse) error
}

type drpcVtctld_CreateKeyspaceStream struct {
	drpc.Stream
}

func (x *drpcVtctld_CreateKeyspaceStream) SendAndClose(m *vtctldata.CreateKeyspaceResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtctlservice_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVtctld_CreateShardStream interface {
	drpc.Stream
	SendAndClose(*vtctldata.CreateShardResponse) error
}

type drpcVtctld_CreateShardStream struct {
	drpc.Stream
}

func (x *drpcVtctld_CreateShardStream) SendAndClose(m *vtctldata.CreateShardResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtctlservice_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVtctld_DeleteKeyspaceStream interface {
	drpc.Stream
	SendAndClose(*vtctldata.DeleteKeyspaceResponse) error
}

type drpcVtctld_DeleteKeyspaceStream struct {
	drpc.Stream
}

func (x *drpcVtctld_DeleteKeyspaceStream) SendAndClose(m *vtctldata.DeleteKeyspaceResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtctlservice_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVtctld_DeleteShardsStream interface {
	drpc.Stream
	SendAndClose(*vtctldata.DeleteShardsResponse) error
}

type drpcVtctld_DeleteShardsStream struct {
	drpc.Stream
}

func (x *drpcVtctld_DeleteShardsStream) SendAndClose(m *vtctldata.DeleteShardsResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtctlservice_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVtctld_DeleteTabletsStream interface {
	drpc.Stream
	SendAndClose(*vtctldata.DeleteTabletsResponse) error
}

type drpcVtctld_DeleteTabletsStream struct {
	drpc.Stream
}

func (x *drpcVtctld_DeleteTabletsStream) SendAndClose(m *vtctldata.DeleteTabletsResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtctlservice_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVtctld_EmergencyReparentShardStream interface {
	drpc.Stream
	SendAndClose(*vtctldata.EmergencyReparentShardResponse) error
}

type drpcVtctld_EmergencyReparentShardStream struct {
	drpc.Stream
}

func (x *drpcVtctld_EmergencyReparentShardStream) SendAndClose(m *vtctldata.EmergencyReparentShardResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtctlservice_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVtctld_FindAllShardsInKeyspaceStream interface {
	drpc.Stream
	SendAndClose(*vtctldata.FindAllShardsInKeyspaceResponse) error
}

type drpcVtctld_FindAllShardsInKeyspaceStream struct {
	drpc.Stream
}

func (x *drpcVtctld_FindAllShardsInKeyspaceStream) SendAndClose(m *vtctldata.FindAllShardsInKeyspaceResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtctlservice_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVtctld_GetBackupsStream interface {
	drpc.Stream
	SendAndClose(*vtctldata.GetBackupsResponse) error
}

type drpcVtctld_GetBackupsStream struct {
	drpc.Stream
}

func (x *drpcVtctld_GetBackupsStream) SendAndClose(m *vtctldata.GetBackupsResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtctlservice_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVtctld_GetCellInfoNamesStream interface {
	drpc.Stream
	SendAndClose(*vtctldata.GetCellInfoNamesResponse) error
}

type drpcVtctld_GetCellInfoNamesStream struct {
	drpc.Stream
}

func (x *drpcVtctld_GetCellInfoNamesStream) SendAndClose(m *vtctldata.GetCellInfoNamesResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtctlservice_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVtctld_GetCellInfoStream interface {
	drpc.Stream
	SendAndClose(*vtctldata.GetCellInfoResponse) error
}

type drpcVtctld_GetCellInfoStream struct {
	drpc.Stream
}

func (x *drpcVtctld_GetCellInfoStream) SendAndClose(m *vtctldata.GetCellInfoResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtctlservice_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVtctld_GetCellsAliasesStream interface {
	drpc.Stream
	SendAndClose(*vtctldata.GetCellsAliasesResponse) error
}

type drpcVtctld_GetCellsAliasesStream struct {
	drpc.Stream
}

func (x *drpcVtctld_GetCellsAliasesStream) SendAndClose(m *vtctldata.GetCellsAliasesResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtctlservice_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVtctld_GetKeyspaceStream interface {
	drpc.Stream
	SendAndClose(*vtctldata.GetKeyspaceResponse) error
}

type drpcVtctld_GetKeyspaceStream struct {
	drpc.Stream
}

func (x *drpcVtctld_GetKeyspaceStream) SendAndClose(m *vtctldata.GetKeyspaceResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtctlservice_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVtctld_GetKeyspacesStream interface {
	drpc.Stream
	SendAndClose(*vtctldata.GetKeyspacesResponse) error
}

type drpcVtctld_GetKeyspacesStream struct {
	drpc.Stream
}

func (x *drpcVtctld_GetKeyspacesStream) SendAndClose(m *vtctldata.GetKeyspacesResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtctlservice_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVtctld_GetSchemaStream interface {
	drpc.Stream
	SendAndClose(*vtctldata.GetSchemaResponse) error
}

type drpcVtctld_GetSchemaStream struct {
	drpc.Stream
}

func (x *drpcVtctld_GetSchemaStream) SendAndClose(m *vtctldata.GetSchemaResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtctlservice_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVtctld_GetShardStream interface {
	drpc.Stream
	SendAndClose(*vtctldata.GetShardResponse) error
}

type drpcVtctld_GetShardStream struct {
	drpc.Stream
}

func (x *drpcVtctld_GetShardStream) SendAndClose(m *vtctldata.GetShardResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtctlservice_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVtctld_GetSrvKeyspacesStream interface {
	drpc.Stream
	SendAndClose(*vtctldata.GetSrvKeyspacesResponse) error
}

type drpcVtctld_GetSrvKeyspacesStream struct {
	drpc.Stream
}

func (x *drpcVtctld_GetSrvKeyspacesStream) SendAndClose(m *vtctldata.GetSrvKeyspacesResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtctlservice_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVtctld_GetSrvVSchemaStream interface {
	drpc.Stream
	SendAndClose(*vtctldata.GetSrvVSchemaResponse) error
}

type drpcVtctld_GetSrvVSchemaStream struct {
	drpc.Stream
}

func (x *drpcVtctld_GetSrvVSchemaStream) SendAndClose(m *vtctldata.GetSrvVSchemaResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtctlservice_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVtctld_GetTabletStream interface {
	drpc.Stream
	SendAndClose(*vtctldata.GetTabletResponse) error
}

type drpcVtctld_GetTabletStream struct {
	drpc.Stream
}

func (x *drpcVtctld_GetTabletStream) SendAndClose(m *vtctldata.GetTabletResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtctlservice_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVtctld_GetTabletsStream interface {
	drpc.Stream
	SendAndClose(*vtctldata.GetTabletsResponse) error
}

type drpcVtctld_GetTabletsStream struct {
	drpc.Stream
}

func (x *drpcVtctld_GetTabletsStream) SendAndClose(m *vtctldata.GetTabletsResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtctlservice_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVtctld_GetVSchemaStream interface {
	drpc.Stream
	SendAndClose(*vtctldata.GetVSchemaResponse) error
}

type drpcVtctld_GetVSchemaStream struct {
	drpc.Stream
}

func (x *drpcVtctld_GetVSchemaStream) SendAndClose(m *vtctldata.GetVSchemaResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtctlservice_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVtctld_GetWorkflowsStream interface {
	drpc.Stream
	SendAndClose(*vtctldata.GetWorkflowsResponse) error
}

type drpcVtctld_GetWorkflowsStream struct {
	drpc.Stream
}

func (x *drpcVtctld_GetWorkflowsStream) SendAndClose(m *vtctldata.GetWorkflowsResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtctlservice_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVtctld_InitShardPrimaryStream interface {
	drpc.Stream
	SendAndClose(*vtctldata.InitShardPrimaryResponse) error
}

type drpcVtctld_InitShardPrimaryStream struct {
	drpc.Stream
}

func (x *drpcVtctld_InitShardPrimaryStream) SendAndClose(m *vtctldata.InitShardPrimaryResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtctlservice_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVtctld_PlannedReparentShardStream interface {
	drpc.Stream
	SendAndClose(*vtctldata.PlannedReparentShardResponse) error
}

type drpcVtctld_PlannedReparentShardStream struct {
	drpc.Stream
}

func (x *drpcVtctld_PlannedReparentShardStream) SendAndClose(m *vtctldata.PlannedReparentShardResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtctlservice_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVtctld_RemoveKeyspaceCellStream interface {
	drpc.Stream
	SendAndClose(*vtctldata.RemoveKeyspaceCellResponse) error
}

type drpcVtctld_RemoveKeyspaceCellStream struct {
	drpc.Stream
}

func (x *drpcVtctld_RemoveKeyspaceCellStream) SendAndClose(m *vtctldata.RemoveKeyspaceCellResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtctlservice_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVtctld_RemoveShardCellStream interface {
	drpc.Stream
	SendAndClose(*vtctldata.RemoveShardCellResponse) error
}

type drpcVtctld_RemoveShardCellStream struct {
	drpc.Stream
}

func (x *drpcVtctld_RemoveShardCellStream) SendAndClose(m *vtctldata.RemoveShardCellResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtctlservice_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVtctld_ReparentTabletStream interface {
	drpc.Stream
	SendAndClose(*vtctldata.ReparentTabletResponse) error
}

type drpcVtctld_ReparentTabletStream struct {
	drpc.Stream
}

func (x *drpcVtctld_ReparentTabletStream) SendAndClose(m *vtctldata.ReparentTabletResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtctlservice_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVtctld_ShardReplicationPositionsStream interface {
	drpc.Stream
	SendAndClose(*vtctldata.ShardReplicationPositionsResponse) error
}

type drpcVtctld_ShardReplicationPositionsStream struct {
	drpc.Stream
}

func (x *drpcVtctld_ShardReplicationPositionsStream) SendAndClose(m *vtctldata.ShardReplicationPositionsResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtctlservice_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCVtctld_TabletExternallyReparentedStream interface {
	drpc.Stream
	SendAndClose(*vtctldata.TabletExternallyReparentedResponse) error
}

type drpcVtctld_TabletExternallyReparentedStream struct {
	drpc.Stream
}

func (x *drpcVtctld_TabletExternallyReparentedStream) SendAndClose(m *vtctldata.TabletExternallyReparentedResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_vtctlservice_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}
